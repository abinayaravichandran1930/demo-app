pipeline {
    agent any
    tools {
        maven '3.9.9'
    }
    stages {
        stage('Verify Tools') {
            steps {
                echo "Verifying Java, Maven, Git, and Docker versions"
                bat '''
                    echo Checking Maven version...
                    mvn -v
                    echo Checking Git version...
                    git --version
                    echo Checking Docker version...
                    docker --version
                '''
            }
        }

        stage('Compile and Clean') {
            steps {
                bat 'mvn clean compile'
            }
        }

        stage('Package') {
            steps {
                bat 'mvn package'
            }
        }

        stage('Docker Cleanup') {
            steps {
                echo "Cleaning up old Docker containers and images"
                bat '''
                    FOR /F "tokens=*" %%i IN ('docker ps -q -f "publish=8088"') DO (
                        echo Stopping old container %%i
                        docker stop %%i
                        docker rm %%i
                    )

                    FOR /F "tokens=*" %%i IN ('docker images -q abinayaravichandran/demo-app') DO (
                        echo Removing old image %%i
                        docker rmi -f %%i
                    )
                '''
            }
        }

        stage('Build Docker Image') {
            steps {
                echo "Building Docker image"
                bat "docker build -t abinayaravichandran/demo-app:%BUILD_NUMBER% ."
            }
        }
        stage('Docker Login') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'DockerId', usernameVariable: 'abinayaravichandran', passwordVariable: 'Abinaya@123')]) {
                    bat "docker login -u %DOCKER_USER% -p %DOCKER_PASS%"
                }
            }
        }

        stage('Docker Push') {
            steps {
                bat "docker push abinayaravichandran/demo-app:%BUILD_NUMBER%"
            }
        }

        stage('Docker Deploy') {
            steps {
                bat "docker run -itd -p 8088:8088 abinayaravichandran/demo-app:%BUILD_NUMBER%"
            }
        }

        stage('Archive Artifacts') {
            steps {
                archiveArtifacts '**/target/*.jar'
            }
        }
    }
}
